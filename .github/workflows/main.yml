name: main
on:
  push:
    branches: ['3.0.0']

jobs:
  test:
    runs-on: ubuntu-22.04
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: rootserver
          MYSQL_PASSWORD: rootserver
          MYSQL_DATABASE: rootserver
          MYSQL_ROOT_PASSWORD: rootserver
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: php 8.0
        id: setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          tools: composer:v2.4.1

      - name: make composer
        run: |
          DEV=1 make composer

      - name: make lint
        run: |
          make lint

      - name: make test
        env:
          DB_PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          make test

  build:
    runs-on: ubuntu-22.04
    needs: [test]
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: php 8.0
        id: setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          tools: composer:v2.4.1

      - name: make composer
        run: |
          make composer

      - name: make crouton
        run: |
          make crouton

      - name: make zip
        run: |
          make zip

      - name: Configure S3 AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions/gh-ci-s3-artifact
          role-session-name: gh-actions
          aws-region: us-east-1

      - name: Copy Artifacts to S3
        run: |
          aws s3 cp build/bmlt-root-server.zip s3://${{ secrets.S3_BUCKET }}/bmlt-root-server/bmlt-root-server-3.0.0-build${GITHUB_RUN_NUMBER}-${GITHUB_SHA}.zip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions/gh-ci-tf-bmlt-rs
          role-session-name: gh-actions-bmlt
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: make docker
        run: |
          make docker

      - name: make docker-push
        id: docker_push_images
        run: |
          make docker-push

      - name: Save Image Name
        run: |
          SHORT_SHA=$(git rev-parse --short=8 HEAD)
          echo "IMAGE_NAME=public.ecr.aws/bmlt/bmlt-root-server:3.0.0-${SHORT_SHA}" >> $GITHUB_ENV

      - name: Download Task Definition
        run: |
          echo $IMAGE_NAME
          aws ecs describe-task-definition --task-definition bmlt-unstable --query taskDefinition | jq -r 'del(
            .taskDefinitionArn,
            .requiresAttributes,
            .compatibilities,
            .revision,
            .status,
            .registeredAt,
            .registeredBy
          )' > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: bmlt-root-server
          image: ${{ env.IMAGE_NAME }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: bmlt-unstable
          cluster: bmlt
          wait-for-service-stability: true
          wait-for-minutes: 5
