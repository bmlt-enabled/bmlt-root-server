/* tslint:disable */
/* eslint-disable */
/**
 * BMLT
 * BMLT Admin API Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Token
 */
export interface Token {
    /**
     * 
     * @type {string}
     * @memberof Token
     */
    accessToken?: string;
    /**
     * 
     * @type {number}
     * @memberof Token
     */
    expiresAt?: number;
    /**
     * 
     * @type {string}
     * @memberof Token
     */
    tokenType?: string;
    /**
     * 
     * @type {number}
     * @memberof Token
     */
    userId?: number;
}

/**
 * Check if a given object implements the Token interface.
 */
export function instanceOfToken(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TokenFromJSON(json: any): Token {
    return TokenFromJSONTyped(json, false);
}

export function TokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): Token {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accessToken': !exists(json, 'access_token') ? undefined : json['access_token'],
        'expiresAt': !exists(json, 'expires_at') ? undefined : json['expires_at'],
        'tokenType': !exists(json, 'token_type') ? undefined : json['token_type'],
        'userId': !exists(json, 'user_id') ? undefined : json['user_id'],
    };
}

export function TokenToJSON(value?: Token | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'access_token': value.accessToken,
        'expires_at': value.expiresAt,
        'token_type': value.tokenType,
        'user_id': value.userId,
    };
}

