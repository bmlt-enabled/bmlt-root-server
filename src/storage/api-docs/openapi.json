{
    "openapi": "3.0.0",
    "info": {
        "title": "BMLT - OpenAPI 3.0",
        "description": "BMLT Admin API Documentation",
        "license": {
            "name": "MIT",
            "url": "https://github.com/bmlt-enabled/bmlt-root-server/blob/main/LICENSE"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://latest.aws.bmlt.app/main_server",
            "description": "BMLT Admin API Server"
        }
    ],
    "paths": {
        "/api/v1/servicebodies": {
            "get": {
                "tags": [
                    "servicebodies"
                ],
                "summary": "Retrieve service bodies",
                "description": "Retrieve service bodies for authenticated user",
                "operationId": "getServiceBodies",
                "responses": {
                    "200": {
                        "description": "Returns when user is authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceBodiesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns when not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceErrorUnauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns when no service body exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\ServiceBody]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/servicebodies/{serviceBodyId}": {
            "get": {
                "tags": [
                    "servicebodies"
                ],
                "summary": "Retrieve a single service body",
                "description": "Retrieve a single service body by id",
                "operationId": "getServiceBody",
                "parameters": [
                    {
                        "name": "serviceBodyId",
                        "in": "path",
                        "description": "ID of service body",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns when user is authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceBodyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns when not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns when unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/token": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Retrieve Token",
                "description": "Retrieve token by username, password",
                "operationId": "authToken",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "format": "username",
                                        "example": "MyUsername"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns when user is authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "2|tR6PIqa8tiBJWMu4zyb3qw4eECuERjLd7xeLKgBu"
                                        },
                                        "expires_at": {
                                            "type": "integer",
                                            "example": "1667342171"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The username field is required. (and 1 more error)"
                                        },
                                        "errors": {
                                            "properties": {
                                                "username": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ServiceBodyResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "0"
                    },
                    "parentId": {
                        "type": "integer",
                        "example": "0"
                    },
                    "name": {
                        "type": "string",
                        "example": "string"
                    },
                    "description": {
                        "type": "string",
                        "example": "string"
                    },
                    "type": {
                        "type": "string",
                        "example": "string"
                    },
                    "userId": {
                        "type": "integer",
                        "example": "0"
                    },
                    "editorUserIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": "0"
                        }
                    },
                    "url": {
                        "type": "string",
                        "example": "string"
                    },
                    "helpline": {
                        "type": "string",
                        "example": "string"
                    },
                    "email": {
                        "type": "string",
                        "example": "string"
                    },
                    "worldId": {
                        "type": "string",
                        "example": "string"
                    }
                },
                "type": "object"
            },
            "ServiceBodiesResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ServiceBodyResponse"
                },
                "example": [
                    {
                        "id": 0,
                        "parentId": 0,
                        "name": "string",
                        "description": "string",
                        "type": "string",
                        "userId": 0,
                        "editorUserIds": [
                            1
                        ],
                        "url": "string",
                        "helpline": "string",
                        "email": "string",
                        "worldId": "string"
                    },
                    {
                        "id": 0,
                        "parentId": 0,
                        "name": "string",
                        "description": "string",
                        "type": "string",
                        "userId": 0,
                        "editorUserIds": [
                            1
                        ],
                        "url": "string",
                        "helpline": "string",
                        "email": "string",
                        "worldId": "string"
                    }
                ]
            },
            "ServiceErrorUnauthenticated": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Unauthenticated."
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}